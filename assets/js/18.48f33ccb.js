(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{184:function(a,t,r){"use strict";r.r(t);var s=r(0),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"前端性能优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化","aria-hidden":"true"}},[a._v("#")]),a._v(" 前端性能优化")]),a._v(" "),r("p",[a._v("前端性能优化一直是前端开发者在工作中比较重要的一个部分,随着前后端的分离，前端在项目中的比重越来越大，\n因此前端的性能优化也显得更加的复杂，其优化的空间也变得更大，因此对前端的技术要求也更高了。")]),a._v(" "),r("h2",{attrs:{id:"前端性能可以做哪些优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前端性能可以做哪些优化","aria-hidden":"true"}},[a._v("#")]),a._v(" 前端性能可以做哪些优化?")]),a._v(" "),r("h3",{attrs:{id:"减少首屏加载时间"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#减少首屏加载时间","aria-hidden":"true"}},[a._v("#")]),a._v(" 减少首屏加载时间")]),a._v(" "),r("p",[a._v("首屏加载的时间，指的是打开网站到网站第一个页面出现的时间，这个时间对于用户来说，是十分重要的。\n如果首屏加载时间很慢，那么往往就会流失很多的用户。那么怎么减少首屏加载时间呢？可以从如下几个方面进行优化:")]),a._v(" "),r("h4",{attrs:{id:"_1、减少dom元素数量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、减少dom元素数量","aria-hidden":"true"}},[a._v("#")]),a._v(" 1、减少DOM元素数量")]),a._v(" "),r("p",[a._v("DOM的加载和显示是比较耗时的，需要浏览器对DOM结构进行分析，\n计算，绘制DOM树，挂载内容等，这些操作大都比较耗时。"),r("code",[a._v("尽量减少DOM的嵌套层数、使用伪类元素代替不必要的DOM")]),a._v("等这些都可以减少DOM元素数量。")]),a._v(" "),r("h4",{attrs:{id:"_2、css文件放在head-javascript文件放底部"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、css文件放在head-javascript文件放底部","aria-hidden":"true"}},[a._v("#")]),a._v(" 2、css文件放在head,JavaScript文件放底部")]),a._v(" "),r("p",[a._v("浏览器（谷歌浏览器，其他的不一定是这样）的渲染过程大致为：构建DOM--\x3e构建CSSOM--\x3e生成Render Tree--\x3e Layout(布局)--\x3ePainting(绘制),\n知道了浏览器的渲染机制，我们把css文件放在head里，能尽快的加载css构建CSSOM,而把JavaScript文件放底部，是因为JavaScript代码如果操作了\nDOM和CSS则会重新导致页面的重排和重绘，进而影响首屏加载的时间。")]),a._v(" "),r("h3",{attrs:{id:"减少http请求数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#减少http请求数","aria-hidden":"true"}},[a._v("#")]),a._v(" 减少HTTP请求数")]),a._v(" "),r("h4",{attrs:{id:"_1、javascript压缩合并"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、javascript压缩合并","aria-hidden":"true"}},[a._v("#")]),a._v(" 1、JavaScript压缩合并")]),a._v(" "),r("h4",{attrs:{id:"_2、小图标等用iconfont代替"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、小图标等用iconfont代替","aria-hidden":"true"}},[a._v("#")]),a._v(" 2、小图标等用iconfont代替")]),a._v(" "),r("h4",{attrs:{id:"_3、使用base64格式的图片"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、使用base64格式的图片","aria-hidden":"true"}},[a._v("#")]),a._v(" 3、使用base64格式的图片")]),a._v(" "),r("h4",{attrs:{id:"_3、css雪碧图（实际项目中使用的频率比较低）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、css雪碧图（实际项目中使用的频率比较低）","aria-hidden":"true"}},[a._v("#")]),a._v(" 3、css雪碧图（实际项目中使用的频率比较低）")]),a._v(" "),r("h3",{attrs:{id:"图片懒加载和预加载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#图片懒加载和预加载","aria-hidden":"true"}},[a._v("#")]),a._v(" 图片懒加载和预加载")]),a._v(" "),r("p",[a._v("图片懒加载：当网站图片比较大或者比较多的时候，使用一些较小的图片代替真正的图片，当图片真正加载好之后再替换掉原先的代替的图片，")]),a._v(" "),r("p",[a._v("代码压缩")]),a._v(" "),r("p",[a._v("图片压缩")]),a._v(" "),r("p",[a._v("提取公共代码")]),a._v(" "),r("p",[a._v("减少重绘和重排")]),a._v(" "),r("p",[a._v("优化浏览器渲染提升动画体验 GPU加速")]),a._v(" "),r("p",[a._v("静态资源缓存")]),a._v(" "),r("p",[a._v("服务端渲染 SSR")]),a._v(" "),r("p",[a._v("cdn加速")]),a._v(" "),r("p",[a._v("对高频触发的事件进行节流或消抖")]),a._v(" "),r("p",[a._v("前端安全防范")])])}],!1,null,null,null);t.default=e.exports}}]);